: >MARK HERE @ 0 , ; : >RESOLVE DUP HERE @ SWAP - SWAP ! ; : <MARK HERE @ ; : <RESOLVE HERE @  -  , ;
: IF POSTPONE 0BRANCH >MARK ; IMMEDIATE : AHEAD POSTPONE BRANCH >MARK ; IMMEDIATE
: ELSE POSTPONE BRANCH >MARK SWAP >RESOLVE ; IMMEDIATE : THEN >RESOLVE ; IMMEDIATE
: BEGIN <MARK ; IMMEDIATE : UNTIL POSTPONE 0BRANCH <RESOLVE ; IMMEDIATE 
: DO <MARK POSTPONE DUP POSTPONE 0BRANCH >MARK POSTPONE 1- POSTPONE >R ; IMMEDIATE
: LOOP POSTPONE R> POSTPONE BRANCH SWAP <RESOLVE >RESOLVE POSTPONE DROP ; IMMEDIATE
: / /MOD SWAP DROP ; : VARIABLE CREATE 0 , ; : SP 32 EMIT ;
VARIABLE CURPROGRAM VARIABLE OFFSET : START CREATE HERE @ CURPROGRAM ! 0 , HERE @ + HERE ! ; 
16 BASE !
: H. 10 /MOD . . ;
: PREFIX 0A EMIT 64 EMIT 61 EMIT 74 EMIT 20 EMIT 30 EMIT 78 EMIT ;
0A BASE !
: DUMP ' EXECUTE DUP @ SWAP 3 + SWAP 2 /  DO
1 + DUP C@ PREFIX H. 1 + DUP C@ H. LOOP 2DROP ;

: SOP CREATE , DOES> @ 0 0 ;
: AOP CREATE , DOES> @ 1 ;

 0 SOP A     1 SOP B     2 SOP C     3 SOP X     4 SOP Y     5 SOP Z     6 SOP I     7 SOP J
 8 SOP [A]   9 SOP [B]  10 SOP [C]  11 SOP [X]  12 SOP [Y]  13 SOP [Z]  14 SOP [I]  15 SOP [J]
16 AOP [A+] 17 AOP [B+] 18 AOP [C+] 19 AOP [X+] 20 AOP [Y+] 21 AOP [Z+] 22 AOP [I+] 23 AOP [J+]
24 SOP [SP++]           24 SOP [--SP]           25 SOP [SP] 26 AOP [SP+]            27 SOP SP
28 SOP PC   29 SOP EX   30 AOP [OPLIT]          31 AOP OPLIT 
: OC, C, ; : OALIGN ALIGN ;
: HERE@ CURPROGRAM @ DUP @ + 4 + ; : C, HERE@ C! CURPROGRAM @ @ 1 + CURPROGRAM @ ! ; : 2C, DUP 256 / C, C, ;
: ALIGN CURPROGRAM @ @ 2 /MOD DROP 1 = IF 0 C, THEN ;
: WRITE2C DUP ROT DUP ROT 256 / SWAP C! 1 + C! ;
: MKLABEL CREATE -1 , 0 , DOES> DUP @ DUP -1 = IF DROP 4 + 2 SWAP ELSE SWAP DROP 1 SWAP .S THEN 31 -ROT ;
: WRITELABEL SWAP .S 1 = IF .S 2C, DROP .S ELSE HERE@ SWAP .S ! 0 2C, DROP THEN ;
: SETLABEL CURPROGRAM @ @ OFFSET @ + 2 / DUP >R ' 4 + DUP ROT SWAP ! 4 + @ DUP 0<> 
  IF R> WRITE2C ELSE R> DROP  THEN ; IMMEDIATE
: PROCESSOP SWAP DUP 1 = IF DROP 2C, 1 THEN DUP 2 = IF SWAP HERE@ SWAP ! 0 2C, THEN 0 = IF DROP THEN ;

: 1OP CREATE , DOES> @ HERE@ >R >R 0 0 C, C, PROCESSOP 1024 * 32 * R> + R> SWAP WRITE2C ;
: 2OP CREATE , DOES> @ HERE@ >R >R 0 0 C, C, PROCESSOP 1024 * >R PROCESSOP 32 * R> + R> + R> SWAP WRITE2C ;

 1 2OP SET  2 2OP ADD   3 2OP SUB   4 2OP MUL   5 2OP MLI   6 2OP DIV   7 2OP DVI   8 2OP MOD   9 2OP MDI
10 2OP AND  11 2OP BOR  12 2OP XOR  13 2OP SHR  14 2OP ASR  15 2OP SHL  16 2OP IFB  17 2OP IFC  18 2OP IFE
19 2OP IFN  20 2OP IFG  21 2OP IFA  22 2OP IFL  23 2OP IFU  26 2OP ADX  27 2OP SBX  30 2OP STI  31 2OP STD
 1 1OP JSR   8 1OP INT   9 1OP IAG  10 1OP IAS  11 1OP RFI  12 1OP IAQ  16 1OP HWN  17 1OP HWQ  18 1OP HWI
19 1OP LOG  20 1OP BRK

: PUSHRSP I OPLIT 1 SUB >R >R >R [I] R> R> R> SET ;
: POPRSP [I] SET I OPLIT 1 ADD ;
VARIABLE LAST
: MCREATE CURPROGRAM @ @ OFFSET @ + 2 / LAST @ 2C, 0 2C,
  OALIGN HERE @ COMPILE-WORDLIST @ >LATEST @ , DUP COMPILE-WORDLIST @ >LATEST ! 0 OC,
  PARSE-WORD DUP 2C, DUP OC, DO DUP C@ DUP OC, C, 1+ LOOP ALIGN OALIGN , DUP 2C, LAST ! DOCON , DROP
  CURPROGRAM @ @ OFFSET @ + 2 / , ;
: CODEDEF CURPROGRAM @ @ OFFSET @ + 2 / 1 + 2C, ;
: NEXT A [Z] SET Z OPLIT 1 ADD PC [A] SET ;
16 BASE !
4000 START TEST

MKLABEL COLDSTART

SP OPLIT EFFF SET
I OPLIT FFFF SET
Z COLDSTART SET
NEXT



MCREATE DOVAR
CODEDEF
A OPLIT 1 ADD
[--SP] A SET
NEXT

: VARDEF DOVAR 2C, ;
: VAR MCREATE VARDEF ;

VAR DOCOL
Z PUSHRSP
A OPLIT 1 ADD
Z A SET
NEXT

: WORDDEF DOCOL 2C, ;

VAR DOCON
A OPLIT 1 ADD
[--SP] [A] SET
NEXT

: CONST MCREATE DOCON 2C, ;

VAR STATE 0 2C,
VAR S0 0 2C,
VAR BASE 0A 2C,
CONST R0 FFFF 2C,
CONST D0 EFFF 2C,
CONST F_HIDDEN 80 2C,
CONST F_IMMEDIATE 20 2C,
CONST F_COMPILE_ONLY 10 2C,

MCREATE !
CODEDEF
A [SP++] SET
[A] [SP++] SET
NEXT

MCREATE @
CODEDEF
A [SP++] SET
[--SP] [A] SET
NEXT

MCREATE LIT
CODEDEF
[--SP] [Z] SET
Z OPLIT 1 ADD
NEXT

MCREATE BRANCH
CODEDEF
Z [Z] SET
NEXT

MCREATE 0BRANCH
CODEDEF
A [SP++] SET
A OPLIT 0 IFE
MKLABEL ZERO
PC ZERO SET
Z OPLIT 1 ADD
NEXT
SETLABEL ZERO
Z [Z] SET
NEXT

MCREATE DUP
CODEDEF
A [SP] SET
[--SP] A SET
NEXT

MCREATE SWAP
CODEDEF
A [SP++] SET
B [SP++] SET
[--SP] A SET
[--SP] B SET
NEXT

MCREATE +
CODEDEF
A [SP++] SET
[SP] A ADD
NEXT

MCREATE >R
CODEDEF
[SP++] PUSHRSP
NEXT

MCREATE R>
CODEDEF
[--SP] POPRSP
NEXT

MKLABEL HELLOSTRING

SETLABEL COLDSTART
LIT 2C, 8000 2C,
>R 2C,
LIT 2C, HELLOSTRING WRITELABEL
MKLABEL DISPLAYLOOP
SETLABEL DISPLAYLOOP
DUP 2C,
@ 2C,
DUP 2C,
MKLABEL EXIT
0BRANCH 2C, EXIT WRITELABEL
R> 2C,
DUP 2C,
LIT 2C, 1 2C,
+ 2C,
>R 2C,
! 2C,
LIT 2C, 1 2C,
+ 2C,
BRANCH 2C, DISPLAYLOOP WRITELABEL

SETLABEL EXIT
BRANCH 2C, EXIT WRITELABEL
BRANCH 2C, EXIT WRITELABEL

SETLABEL HELLOSTRING
F048 2C,
F065 2C,
F06C 2C,
F06C 2C,
F06F 2C,
F020 2C,
F057 2C,
F06F 2C,
F072 2C,
F06C 2C,
F064 2C,
0 2C,

ALIGN
DUMP TEST
